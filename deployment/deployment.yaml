apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-poller
  namespace: stock
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: stock-poller
  template:
    metadata:
      annotations:
        git-tag: "v54"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
      labels:
        app: stock-poller
    spec:
      containers:
      - name: poller-container
        image: artifacts.tekuro.io/stock-poller:latest
        env:
        - name: INFLUX_URL
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: INFLUX_URL
        - name: INFLUX_ORG
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: INFLUX_ORG
        - name: INFLUX_BUCKET_STOCK
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: INFLUX_BUCKET_STOCK
        - name: INFLUX_BUCKET_HISTORICAL
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: INFLUX_BUCKET_HISTORICAL
        - name: ALERT_HOST
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: ALERT_HOST
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: REDIS_PORT
        - name: MULTIPLIER_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: MULTIPLIER_THRESHOLD
        - name: DELTA_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: stock-poller-config
              key: DELTA_THRESHOLD
        - name: INFLUX_TOKEN
          valueFrom:
            secretKeyRef:
              name: stock-poller-secrets
              key: INFLUX_TOKEN

        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: redis-password
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
